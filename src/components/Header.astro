---
import type { HTMLAttributes } from 'astro/types'
import TelegramIcon from "@assets/telegram.svg"
import GithubIcon from "@assets/github.svg"
import { Image } from 'astro:assets'
import { getRelativeLocaleUrl } from 'astro:i18n'
import { getLocaleFromUrl, useTranslations } from '@i18n/translate'

type Props = HTMLAttributes<"div">
const { ...props } = Astro.props
const locale = getLocaleFromUrl(Astro.url)
const t = useTranslations(locale);

const path = Astro.url.pathname;
let tab = path.substring(path.indexOf("/") + 1);
tab = tab.substring(tab.indexOf("/") + 1);
tab = tab.substring(0, tab.indexOf("/")).trim();
---

<div class="header" {...props}>
	<div class="header-content">
		<a href={getRelativeLocaleUrl(locale)} class="logo">MrBoomDev</a>

		<div class="header-content-items">
			<a href={getRelativeLocaleUrl(locale)} class:list={["tab", tab == "" ? "tab-selected" : ""]}>{t("home")}</a>
			<a href={getRelativeLocaleUrl(locale, "projects")} class:list={["tab", tab == "projects" ? "tab-selected" : ""]}>{t("projects")}</a>
			<a href={getRelativeLocaleUrl(locale, "contact")} class:list={["tab", tab == "contact" ? "tab-selected" : ""]}>{t("contact")}</a>

			<div class="socials">
				<a href="https://t.me/MrBoomDev">
					<Image src={TelegramIcon} title="Telegram" alt="Telegram icon" class="icon" />
				</a>

				<a href="https://github.com/MrBoomDeveloper">
					<Image src={GithubIcon} title="GitHub" alt="GitHub icon" class="icon" />
				</a>
			</div>
		</div>
	</div>
</div>

<style lang="scss">
	.header {
		width: 100%;
		display: flex;
		justify-content: center;
	}

	.header-content {
		display: flex;
		width: 100%;
		justify-content: space-between;
		max-width: 800px;
		padding: 1rem;
		gap: 1rem;
	}

	a {
		transition: .1s;

		&:hover {
			opacity: .75;
		}

		&:active {
			scale: .95;
		}
	}

	.logo {
		font-family: poppins, sans-serif;
		font-weight: 800;
		font-size: 1.6em;
		color: rgb(240, 87, 255);

		&:hover {
			opacity: .75;
			text-shadow: rgba(217, 48, 255, .25) 0 0 2rem;
		}
	}

	.header-content-items {
		display: flex;
		align-items: center;
		gap: 1.6rem;

		& > a {
			display: flex;
			transition: .1s;
		}
	}

	.socials {
		display: flex;
		align-items: center;
		gap: .8rem;
	}

	.tab {
		position: relative;
		text-decoration: none;
		color: white;
		font-size: 1.1em;
		font-family: poppins, sans-serif;

		&::after {
			content: "";
			display: block;
			position: absolute;
			bottom: -.2rem;
			left: 50%;
			right: 50%;
			width: 0%;
			height: .06em;
			background-color: white;
			transition: .2s;
		}

		&:is(.tab-selected, :hover)::after {
			width: 110%;
			left: -5%;
		}
	}

	.icon {
		width: 1.8rem;
		aspect-ratio: 1;
		filter: invert(100%) sepia(5%) saturate(314%) hue-rotate(276deg) brightness(117%) contrast(100%);
	}
</style>